class Database{uniqueId(){return crypto.randomUUID()}async listDocuments(t,e){try{let r=JSON.parse(localStorage.getItem(t))||[];if(!e)return r;return r.filter(t=>Object.entries(e).every(([e,r])=>t[e]===r))}catch(a){throw a}}async createDocument(t,e,r){try{let a=JSON.parse(localStorage.getItem(t))||[],n={$id:e||this.uniqueId(),createdAt:new Date().toUTCString(),updatedAt:new Date().toUTCString(),...r};return localStorage.setItem(t,JSON.stringify([...a,n])),n}catch(s){throw s}}async getDocument(t,e){try{let r=(JSON.parse(localStorage.getItem(t))||[]).find(t=>t.$id===e);if(r)return r;throw{code:404,message:"No data available"}}catch(a){throw a}}async updateDocument(t,e,r){try{let a=(JSON.parse(localStorage.getItem(t))||[]).map(t=>t.$id===e?{...t,...r,updatedAt:new Date().toUTCString()}:t);return localStorage.setItem(t,JSON.stringify(a)),a}catch(n){throw n}}async deleteDocument(t,e){try{let r=(JSON.parse(localStorage.getItem(t))||[]).filter(t=>t.$id!==e);return localStorage.setItem(t,JSON.stringify(r)),r}catch(a){throw a}}}
